{"version":3,"sources":["App.js","index.js"],"names":["App","useState","timerStatus","setTimerStatus","time","setTime","subscription","setSubscription","activateSubscription","subscribtion","interval","subscribe","data","state","className","Date","toISOString","slice","id","type","onClick","disabled","unsubscribe","fromEvent","document","querySelector","pipe","timeInterval","scan","acc","val","filter","ReactDOM","render","StrictMode","getElementById"],"mappings":"4PAgGeA,MA3Ff,WACE,MAAsCC,mBAAS,YAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAwBF,mBAAS,GAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAwCJ,mBAAS,MAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KAoCMC,EAAuB,WAC3B,IACMC,EADcC,YAAS,KACIC,WAAU,SAAAC,GAAI,OAC7CP,GAAQ,SAAAQ,GAAK,OAAIA,EAAQ,UAE3BV,EAAe,UACfI,EAAgBE,IAGlB,OACE,sBAAKK,UAAU,MAAf,UACE,uCACA,mBAAGA,UAAU,QAAb,SAAsB,IAAIC,KAAKX,GAAMY,cAAcC,MAAM,GAAI,MAC7D,sBAAKH,UAAU,kBAAf,UACE,wBACEA,UAAU,SACVI,GAAG,WACHC,KAAK,SACLC,QApDgB,WACtBZ,KAoDMa,SAA0B,WAAhBnB,EALZ,mBASA,wBACEY,UAAU,SACVI,GAAG,UACHC,KAAK,SACLC,QAzDe,WAChBd,IACLD,EAAQ,GACRF,EAAe,YACfG,EAAagB,cACbf,EAAgB,QAgDZ,kBAQA,wBACEO,UAAU,SACVI,GAAG,UACHC,KAAK,SACLC,QAzDe,WACLG,YAAUC,SAASC,cAAc,YAAa,SAE3DC,KACCC,cACAC,aAAK,SAACC,EAAKC,GAAN,OAAeA,EAAIpB,SAAW,IAAMmB,EAAM,EAAI,IAAI,GACvDE,aAAO,SAAAD,GAAG,OAAY,IAARA,MAEfnB,WAAU,WACJL,IACLH,EAAe,YACfG,EAAagB,mBA0Cb,kBAQA,wBACER,UAAU,SACVI,GAAG,WACHC,KAAK,SACLC,QAlDa,WACdd,IACLD,EAAQ,GACRC,EAAagB,cACbd,MA0CI,0BC9ERwB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFV,SAASW,eAAe,W","file":"static/js/main.b9890cc3.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { interval, fromEvent } from 'rxjs';\nimport { filter, scan, timeInterval } from 'rxjs/operators';\nimport './App.css';\n\nfunction App() {\n  const [timerStatus, setTimerStatus] = useState('inactive');\n  const [time, setTime] = useState(0);\n  const [subscription, setSubscription] = useState(null);\n\n  const onStartBtnClick = () => {\n    activateSubscription();\n  };\n\n  const onStopBtnClick = () => {\n    if (!subscription) return;\n    setTime(0);\n    setTimerStatus('inactive');\n    subscription.unsubscribe();\n    setSubscription(null);\n  };\n\n  const onWaitBtnClick = () => {\n    const target$ = fromEvent(document.querySelector('#waitBtn'), 'click');\n    const doubleClicks = target$\n      .pipe(\n        timeInterval(),\n        scan((acc, val) => (val.interval < 300 ? acc + 1 : 0), 0),\n        filter(val => val === 1),\n      )\n      .subscribe(() => {\n        if (!subscription) return;\n        setTimerStatus('inactive');\n        subscription.unsubscribe();\n      });\n  };\n\n  const onResetClick = () => {\n    if (!subscription) return;\n    setTime(0);\n    subscription.unsubscribe();\n    activateSubscription();\n  };\n\n  const activateSubscription = () => {\n    const observable$ = interval(1000);\n    const subscribtion = observable$.subscribe(data =>\n      setTime(state => state + 1000),\n    );\n    setTimerStatus('active');\n    setSubscription(subscribtion);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Timer</h1>\n      <p className=\"timer\">{new Date(time).toISOString().slice(11, 19)}</p>\n      <div className=\"buttonContainer\">\n        <button\n          className=\"button\"\n          id=\"startBtn\"\n          type=\"button\"\n          onClick={onStartBtnClick}\n          disabled={timerStatus === 'active' ? true : false}\n        >\n          Start\n        </button>\n        <button\n          className=\"button\"\n          id=\"stopBtn\"\n          type=\"button\"\n          onClick={onStopBtnClick}\n        >\n          Stop\n        </button>\n        <button\n          className=\"button\"\n          id=\"waitBtn\"\n          type=\"button\"\n          onClick={onWaitBtnClick}\n        >\n          Wait\n        </button>\n        <button\n          className=\"button\"\n          id=\"resetBtn\"\n          type=\"button\"\n          onClick={onResetClick}\n        >\n          Reset\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}